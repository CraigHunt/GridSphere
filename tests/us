/*
 * @author <a href="mailto:novotny@aei.mpg.de">Jason Novotny</a>
 * @version $Id$
 */
package org.gridlab.gridsphere.services.impl.user;

import org.gridlab.gridsphere.portlet.service.PortletService;
import org.gridlab.gridsphere.portlet.service.spi.PortletServiceConfig;
import org.gridlab.gridsphere.portlet.User;
import org.gridlab.gridsphere.portlet.PortletLog;
import org.gridlab.gridsphere.portlet.AccessDeniedException;
import org.gridlab.gridsphere.portlet.impl.SportletLog;
import org.gridlab.gridsphere.services.AccessControlManagerService;
import org.gridlab.gridsphere.services.impl.BaseAccessControlServiceImpl;
import org.gridlab.gridsphere.services.impl.BaseAccessControlManagerServiceImpl;

import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.ArrayList;

public class AccessControlManagerServiceImpl extends BaseAccessControlManagerServiceImpl implements AccessControlManagerService {

    private static PortletLog log = SportletLog.getInstance(AccessControlManagerServiceImpl.class);

    public AccessControlManagerServiceImpl(User creator, int role) {
        super(creator, role);
    }

    public void createNewGroup(String groupName) throws AccessDeniedException {
        throw new AccessDeniedException("Only super users can create new groups");
    }

    public void renameGroup(String oldGroupName, String newGroupName) throws AccessDeniedException {
        throw new AccessDeniedException("Only super users can rename groups");
    }

    public void removeGroup(String groupName) throws AccessDeniedException {
        throw new AccessDeniedException("Only super users can remove groups");
    }

    public void addRoleInGroup(User user, String groupName, int roleName) throws AccessDeniedException {
        throw new AccessDeniedException("Only super and admin users can add roles in groups");
    }

    public void addUserToGroup(User user, String groupName, int roleName) throws AccessDeniedException {
        throw new AccessDeniedException("Only super and admin users can add users to groups");
    }

    public void removeUserFromGroup(User user, String groupName) throws AccessDeniedException {
        throw new AccessDeniedException("Only super and admin users can remove users from groups");
    }

    public void removeUserRoleFromGroup(User user, String groupName, int roleName) throws AccessDeniedException {
        throw new AccessDeniedException("Only super and admin users can remove users roles from groups");
    }

}
