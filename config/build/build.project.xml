<!-- =======================================================================

   Build file for the @PROJECT_TITLE@ portlets

Notes:
   This is a build file for use with the Jakarta Ant build tool.

Prerequisites:

   jakarta-ant from http://jakarta.apache.org

Build Instructions:
   To build, invoke "ant"

Copyright:
  2002,2003

- $Id$

============================================================================ -->

<project name="@PROJECT_TITLE@" default="help" basedir=".">

    <property file="build.properties"/>

    <property name="project.name" value="@PROJECT_NAME@"/>
    <property name="project.title" value="@PROJECT_TITLE@"/>

    <property name="gridsphere.home" value="../.."/>
    <property name="optimize"    value="false"/>
    <property name="debug"       value="on"/>
    <property name="deprecation" value="true"/>

    <!-- Version properties -->
    <property name="version"         value="1.0" />
    <property name="release"         value="rc1" />
    <property name="version.release" value="${version} ${release}"/>

    <property name="project"         value="${project.title} ${version.release}"/>
    <property name="project.api" value="${project.title} API ${version.release}" />

    <!-- GridSphere build and dist directories -->

    <!--- Type of SQL Database to use -->
    <property name="DATABASE_TYPE" value="${gridsphere.database.type}"/>

    <!-- GridSphere build targets -->
    <property name="build.classes" value="${project.build}/classes"/>
    <property name="build.webapp" value="${project.build}/webapp"/>
    <property name="build.docs"    value="${project.build}/docs"/>
    <property name="build.javadoc" value="${build.docs}/javadocs"/>
    <property name="build.tests"   value="${project.build}/tests"/>

    <property environment="env"/>

    <property name="catalina.exists" value="${env.CATALINA_HOME}"/>
    <!-- =================================================================== -->
    <!-- Sets the CLASSPATH                                                  -->
    <!-- =================================================================== -->
    <path id="classpath">

        <pathelement location="${build.classes}"/>

        <fileset dir="${env.CATALINA_HOME}/common/lib">
            <include name="*.jar"/>
        </fileset>

        <!-- this is for the XML JARs in Tomcat 4.1.x -->
        <fileset dir="${env.CATALINA_HOME}/common/endorsed">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="${gridsphere.home}/lib">
            <include name="*.jar"/>
            <include name="ext/*.jar"/>
        </fileset>

        <pathelement path="${java.class.path}"/>
    </path>

    <!-- =================================================================== -->
    <!-- Functions                                                           -->
    <!-- =================================================================== -->
    <target name="setenv" description="Check for libraries and print out config information">

        <!-- Make build directories -->
        <mkdir dir="${project.build}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.webapp}"/>
        <mkdir dir="${build.docs}"/>

        <echo message="--- Build environment for ${project} ---" />
        <echo message="--- Flags (Note: If the {property name} is displayed,"/>
        <echo message="           then the component is not present)" />
        <echo message=""/>

        <echo message="ANT_HOME is set to = ${env.ANT_HOME}"/>
        <echo message="JAVA_HOME is set to = ${env.JAVA_HOME}"/>
        <echo message="CATALINA_HOME is set to = ${env.CATALINA_HOME}"/>

        <echo message="--- Property values ---" />
        <echo message="debug=${debug}" />
        <echo message="deprecation=${deprecation}" />
        <echo message="optimize=${optimize}" />
    </target>

    <!-- =================================================================== -->
    <!-- Print usage information                                             -->
    <!-- =================================================================== -->
    <target name="help" description="shows help about useful target">
        <echo message="target                 description"/>
        <echo message="-----------------------------------------------------------------"/>
        <echo message="clean                  Cleans up the build dir                       "/>
        <echo message="compile                Compiles all the code                         "/>
        <echo message="jar                    Create a ${project.name} JAR                  "/>
        <echo message="war                    Create a ${project.name} WAR                  "/>
        <echo message="docs                   Creates ${project.title} Javadoc API          "/>
        <echo message="deploy                 Deploys ${project.title} to tomcat            "/>
        <echo message="dist                   Builds a binary ${project.title} distribution "/>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles @PROJECT_TITLE@ source code                                -->
    <!-- =================================================================== -->
    <target name="compile" depends="setenv" description="Compile ${project.title} source code">
        <echo>Compiling ${project.title} source code</echo>
        <javac  srcdir="src"
            destdir="${build.classes}"
            classpathref="classpath"
            debug="${debug}"
            optimize="${optimize}"
            deprecation="false"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates a @PROJECT_TITLE@ JAR library archive configured for Tomcat -->
    <!-- =================================================================== -->
    <target name="jar" depends="compile" description="Creates ${project.name} JAR">
        <echo>Creating ${project.name} JAR for Tomcat</echo>

        <mkdir dir="${build.classes}/${project.name}"/>

        <copy file="config/log4j.properties"
                  tofile="${build.classes}/${project.name}/log4j.properties"/>

        <jar jarfile="lib/${project.name}.jar" basedir="${build.classes}" >
            <include name="org/**" />
            <include name="${project.name}/**" />
        </jar>
     </target>

    <!-- =================================================================== -->
    <!-- Cleans everything                                                   -->
    <!-- =================================================================== -->
    <target name="clean" description="Delete classes and existing library">
        <delete quiet="true" dir="${project.build}"/>
        <delete quiet="true" dir="${project.dist}"/>
    </target>

    <target name="docs" depends="javadocs" description="Create ${project.title} Documentation"/>

    <!-- =================================================================== -->
    <!-- Creates all the @PROJECT_TITLE@ API documentation                   -->
    <!-- =================================================================== -->
    <target name="javadocs" depends="setenv" description="Create ${project.title} Javadocs">
        <delete quiet="true" dir="${build.javadoc}"/>
        <mkdir dir="${build.javadoc}"/>
        <javadoc packagenames="org.gridlab.gridsphere.*"
                 sourcepath="src"
                 classpathref="classpath"
                 destdir="${build.javadoc}"
                 author="true"
                 version="true"
                 splitindex="true"
                 use="true"
                 maxmemory="180m"
                 windowtitle="${project.title}"
                 doctitle="${project.api}">
        <!-- bottom="Copyright &#169; 2002,2003 GridLab Project. All Rights Reserved."> -->
        </javadoc>
    </target>

    <!-- =================================================================== -->
    <!-- Creates @PROJECT_TITLE@ the  WAR file                               -->
    <!-- =================================================================== -->
    <target name="war" depends="jar" description="Create ${project.name} WAR">
        <war warfile="${project.build}/${project.name}.war" update="true"
            webxml="${webapp.dir}/WEB-INF/web.xml">
            <fileset dir="${gswebapp.dir}">
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Deploys @PROJECT_TITLE@ portlet to a local server                   -->
    <!-- =================================================================== -->
    <target name="deploy" depends="jar" if="${catalina.exists}" description="Deploys ${project.title} portlet to a local server">
        <property name="project.webapp" value="${env.CATALINA_HOME}/webapps"/>
        <copy todir="${project.webapp}">
            <fileset dir="webapp"/>
        </copy>
        <copy file="${gridsphere.home}/lib/portlet-widget-tags.jar" todir="${project.webapp}/WEB-INF/lib"/>
        <copy file="lib/${project.name}.jar" todir="${project.webapp}/WEB-INF/lib"/>
    </target>

</project>
