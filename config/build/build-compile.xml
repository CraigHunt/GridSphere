<!--
Build include file for the GridSphere Portal source code, see build.xml

 - $Id$

-->

<project name="GridSphere Jar">

    <!-- Compiles the sourcecode and makes jar's. Include file to build.xm -->

    <!-- =================================================================== -->
    <!-- Compiles core framework                                             -->
    <!-- =================================================================== -->
    <target name="compile" depends="setenv" description="Compile core framework">
        <echo>Compiling core framework</echo>
        <javac srcdir="src"
            destdir="${build.classes}"
            classpathref="classpath"
            debug="${debug}"
            optimize="${optimize}"
            deprecation="${deprecation}"/>
    </target>

    <!-- ================================================================== -->
    <!-- Create the GridSphere Portlet Container JAR library archive        -->
    <!-- ================================================================== -->
    <target name="gridsphere-portal-jar" depends="compile" description="Makes gridsphere JAR">
        <mkdir dir="${build.classes}/gridsphere"/>
        <filter token="GRIDSPHERE_RELEASE" value="${gridsphere.name}"/>
        <copy todir="${build.classes}/org/gridlab/gridsphere/portlet/impl/"
              file="webapps/gridsphere/WEB-INF/portlet.properties"
              filtering="true"/>
        <copy file="webapps/gridsphere/WEB-INF/mapping/portlet-jsr-mapping.xml"
              todir="${build.classes}/org/gridlab/gridsphere/portletcontainer/jsrimpl/descriptor"/>
        <copy file="webapps/gridsphere/WEB-INF/mapping/portlet-mapping.xml"
              todir="${build.classes}/org/gridlab/gridsphere/portletcontainer/impl/descriptor"/>
        <jar jarfile="${build.lib}/gridsphere-portal-${gridsphere.version}.jar" basedir="${build.classes}" defaultexcludes="yes">
            <include name="org/gridlab/gridsphere/portletcontainer/impl/**"/>
            <include name="org/gridlab/gridsphere/portletcontainer/jsrimpl/**"/>
            <include name="org/gridlab/gridsphere/portlet/impl/**"/>
            <include name="org/gridlab/gridsphere/portlet/jsrimpl/**"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the GridSphere portlets JAR                                 -->
    <!-- =================================================================== -->
    <target name="gridsphere-core-jar" depends="compile" description="Create GridSphere Core JAR">
        <jar jarfile="${build.lib}/gridsphere-core-${gridsphere.version}.jar" basedir="${build.classes}">
            <!-- core portlets, GS servlet & filter, event impl -->
            <include name="org/gridlab/gridsphere/portlets/**"/>
            <include name="org/gridlab/gridsphere/servlets/**"/>
            <include name="org/gridlab/gridsphere/filters/**"/>
            <include name="org/gridlab/gridsphere/tools/**"/>
            <include name="org/gridlab/gridsphere/event/impl/**"/>
            <!-- layout impl classes -->
            <include name="org/gridlab/gridsphere/layout/**"/>
            <include name="org/gridlab/gridsphere/layout/event/impl/**"/>
            <exclude name="org/gridlab/gridsphere/layout/event/*.class"/>
            <exclude name="org/gridlab/gridsphere/layout/PortletComponent.class"/>
            <exclude name="org/gridlab/gridsphere/layout/ComponentRender.class"/>
            <exclude name="org/gridlab/gridsphere/layout/ComponentLifecycle.class"/>
            <!-- core service impl classes -->
            <include name="org/gridlab/gridsphere/services/**/impl/**"/>
        </jar>
    </target>


    <target name="gridsphere-portal-api-jar" depends="compile" description="Create GridSphere Portal API JAR">
        <echo>Creating GridSphere Portal API JAR</echo>
        <copy todir="${build.classes}/gridsphere/resources">
            <fileset dir="config/resources"/>
        </copy>
        <jar jarfile="${build.lib}/gridsphere-portal-api-${gridsphere.version}.jar" basedir="${build.classes}">
            <!-- portlet container interfaces -->
            <include name="org/gridlab/gridsphere/portletcontainer/**"/>
            <!-- core services interfaces -->
            <include name="org/gridlab/gridsphere/services/**"/>
            <!-- core layout interfaces -->
            <include name="org/gridlab/gridsphere/layout/PortletComponent.class"/>
            <include name="org/gridlab/gridsphere/layout/ComponentRender.class"/>
            <include name="org/gridlab/gridsphere/layout/ComponentLifecycle.class"/>
            <include name="org/gridlab/gridsphere/layout/event/**"/>
            <!-- core event interfcaes -->
            <include name="org/gridlab/gridsphere/event/**"/>
            <!-- JSR 168 API -->
            <include name="javax/**"/>
            <!-- GS properties -->
            <include name="gridsphere/**"/>
            <!-- GS portlet API -->
            <include name="org/gridlab/gridsphere/portlet/**"/>
            <exclude name="**/impl/**"/>
            <exclude name="**/jsrimpl/**"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the GridSphere service framework JAR library archive        -->
    <!-- =================================================================== -->
    <target name="gridsphere-service-framework-jar" depends="compile" description="Creates GS portlet service framework JAR">
        <echo>Creating GridSphere service framework JAR</echo>
        <copy file="webapps/gridsphere/WEB-INF/mapping/portlet-services-mapping.xml" todir="${build.classes}/org/gridlab/gridsphere/portlet/service/spi/impl"/>
        <jar jarfile="${build.lib}/gridsphere-service-framework-${gridsphere.version}.jar" basedir="${build.classes}">
            <include name="**/portlet/service/**"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the GridSphere Provider JAR                                 -->
    <!-- =================================================================== -->
    <target name="gridsphere-provider-jar" depends="compile" description="Create lib/gridsphere-provider.jar">
        <copy todir="${build.classes}/gridsphere/resources">
            <fileset dir="config/resources"/>
        </copy>
        <jar jarfile="${build.lib}/gridsphere-provider-${gridsphere.version}.jar" basedir="${build.classes}">
            <include name="org/gridlab/gridsphere/provider/**"/>
            <include name="gridsphere/**"/>
            <metainf dir="${gswebapp.dir}/WEB-INF/tlds"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates all JAR's                                                   -->
    <!-- =================================================================== -->
    <target name="jar" depends="gridsphere-service-framework-jar, gridsphere-provider-jar, gridsphere-portal-api-jar, gridsphere-core-jar, gridsphere-portal-jar, gridsphere-jsp-jar" description="Creates all jars"/>


    <!-- =================================================================== -->
    <!-- Precompile JSP Pages                                                -->
    <!-- =================================================================== -->

    <!-- prolems here:
        jspc: seems to ignore the exclude tag, so even for jsp includes java code is generated, even the web.inc
              mapping is done
        javac: if **/include/** is excluded from compiling, everything works in tomcat, jetty will complain about
              missing servlets which where generatedin web.inc from jspc

    -->

    <target name="jsp-precompile" depends="gridsphere-provider-jar">

        <taskdef name="jspc50" classname="org.apache.jasper.JspC" classpathref="classpath">
        </taskdef>

        
        <mkdir dir="${gridsphere.build}/jsp/source"/>
        <mkdir dir="${gridsphere.build}/jsp/classes"/>
        <if>
            <equals arg1="${gridsphere.useprecompiledjsp}" arg2="true"/>
            <then>

                <jspc50 outputDir="${gridsphere.build}/jsp/source"
                    uriroot="webapps/gridsphere/"
                    webXmlFragment="${gridsphere.build}/jsp/web.inc"
                    validateXml="false">
                </jspc50>
            </then>
        </if>

    </target>

    <target name="jsp-compile" depends="jsp-precompile">
        <javac srcdir="${gridsphere.build}/jsp/source"
            destdir="${gridsphere.build}/jsp/classes"
            debug="true"
            optimize="false"
            includes="**/*.java"
            classpath="${build.lib}/gridsphere-provider-${gridsphere.version}.jar"
            classpathref="classpath"
            source="1.4">
        </javac>

    </target>

    <!-- =================================================================== -->
    <!-- Put JSP pages in a jar                                              -->
    <!-- =================================================================== -->

    <target name="gridsphere-jsp-jar" depends="jsp-compile">
        <if>
            <equals arg1="${gridsphere.useprecompiledjsp}" arg2="true"/>
            <then>
                <jar jarfile="${build.lib}/gridsphere-jsp.jar" basedir="${gridsphere.build}/jsp/classes/">
                    <include name="**"/>
                </jar>
            </then>
        </if>
    </target>

</project>
