$Id$

	Building and Testing the GridSphere Distribution
=========================================================


Requirements
------------

1) Building the GridSphere distribution requires Ant 1.5.3-1+ available at
http://jakarta.apache.org/ant. In addition, make sure the $ANT_HOME/lib
directory contains junit.jar used for testing and xalan.jar used to
construct the documentation from the XSL style sheets. Both junit.jar and
xalan.jar are found in the lib directory.

2) You will also need a Tomcat 4.1+ servlet container available at
http://jakarta.apache.org/tomcat. In addition to providing a hosting
environment for GridSphere, Tomcat provides some of the required XML (JAR)
libraries that are needed for compilation. (Make sure you get the full 
Tomcat version and not the Light Edition (LE))

3) (Optional) If you wish to build PDF formats of the documentation download a
FOP binary from http://xml.apache.org/fop/download.html and unpack it and set
FOP_HOME environment variable to the top level FOP directory (just like ANT).

Compiling and Deploying
-----------------------

The Ant build script, build.xml, uses the build.properties file to specify any
compilation options. Edit build.properties appropriately for your needs.

At this point, simply invoking "ant install" will deploy the GridSphere portlet 
container to Tomcat. 


The build.xml supports the following basic tasks:

install -- builds and deploys GridSphere, makes the documentation and
           installs the database

clean -- removes the build and dist directories including all the
	 compiled classes

update -- updates the existing source code from CVS

compile -- compiles the GridSphere source code 

deploy -- deploys the GridSphere framework and all portlets to a
	  Tomcat servlet container located at $CATALINA_HOME

create-database - creates a new, fresh database with original
                 GridSphere settings, this wipes out your current database!

docs -- compiles all GridSphere docbook documentation and
	builds the Javadoc documentation from the source code

run-tests -- runs all Junit tests inside the Tomcat container using
	     the Jakarta Cactus framework  

test-reports -- creates HTML test reports from the Junit tests. You first 
		have to run "run-tests"

To see all the targets invoke "ant --projecthelp".

2) Read the compiled documentation found located at build/docs/index.html 
for more information on using and developing portlets with  GridSphere.

Testing GridSphere
------------------

Many of the portlet services are unit tested using the Junit testing framework
http://www.junit.org. Simply invoking "ant compile-tests" will compile all the
unit tests. Invoking "ant test-reports" is a nice way to run all the tests
and produce a set of HTML reports in the build/reports/html directory. For more
information on how unit testing is performed, have a look at the GridSphere 
design document.

Errors & Troubleshooting
------------------------

If you have errors during the docbook transformation, such as "No DTM IDs are available" or other errors, you should check your version of Java (java -version). If you have JDK 1.4.1, it's likely the version of xalan.jar shipped with it is broken. The recommended solution is to get a recent xalan.jar from http://xml.apache.org/xalan-j/index.html and copy it to JAVA_HOME/jre/lib/endorsed (If you have an Apple with OS X then copy it to /System/Library/Frameworks/JavaVM.framework/Home/lib/endorsed/).

Thanks,

The GridSphere Team		http://www.gridsphere.org


