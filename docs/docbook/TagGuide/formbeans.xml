<!--
    Author:     Jason Novotny, Oliver Wehrens
    Version:    $Id$
-->

<chapter id="uibeans">
    <title>GridSphere UI Visual Bean Library</title>

    <para>
        The GridSphere visual beans act as counterparts to the visual tag library, making it
        possible to access beans from within portlets to obtain updated values for dynamic
        form elements such as textfields, hiddenfields, password fields, listboxes, and so on.
    </para>

    <sect1 id="beanusage"><title>Usage on GridSphere UI Visual Beans</title>
        <para>
            Usage of the visual beans requires that your portlet subclass from &ActionPortlet;
            The ActionPortlet provides a &FormEvent; object that subclasses from &ActionEvent;
            and provides interfaces for obtaining visual beans. The FormEvent provides methods
            to obtain any kind of visual bean as the following usage example shows:
        </para>
        <example>
            <title>Usage of visual beans from a portlet</title>
        <screen>
            public void doSomething(FormEvent event) {
                HiddenFieldBean hf = event.getHiddenFieldBean("fruit");
                String fruit = hf.getValue();
                // do something with fruit...

                ListBoxBean lb = event.getListBoxBean("fruitlist");
                List fruits = lb.getSelectedValues();
                // do something with fruits...
            }
        </screen>
        <para>
            The example shows how a hidden field and listbox elements can be retrieved from the
            presentation using the <link linkend="uitags">UI tags described</link>. If the beans are updated,
            the presentation page will be rendered with the new values.
        </para>
    </example>
    </sect1>

    <sect1 id="basicbeans"><title>Base Bean Attributes</title>
        <para>
            Just like the UI tags, all visual beans inherit from a <classname>BaseComponentBean</classname> which
            provides various attributes for setting the look and feel, labels and values. Below is a list
            of the basic bean attributes, however not all are used for every visual bean. As a general coding practice,
            presentation attributes such as color, font, etc should be set in the UI tags and not in the beans
            in the portlet code.
        </para>
        <table>
            <title>Base Bean Attributes</title>
            <tgroup cols="3">
                <thead>
                    <row>
                        <entry>Attribute name</entry><entry>Required?</entry><entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>name</entry><entry>no</entry><entry>string: a name for this component. Generally this
                            uses the underlying name attribute of the corresponding HTML element</entry>
                    </row>
                </tbody>
                <tbody>
                    <row>
                        <entry>value</entry><entry>no</entry><entry>string: the value of this component. Generally this
                            uses the underlying value attribute of the corresponding HTML element</entry>
                    </row>
                </tbody>
                <tbody>
                    <row>
                        <entry>readonly</entry><entry>no</entry><entry>boolean: true if this component is intended to be
                        read-only, false otherwise</entry>
                    </row>
                </tbody>
                <tbody>
                    <row>
                        <entry>disabled</entry><entry>no</entry><entry>boolean: true if this component is intended to be
                        disabled, false otherwise</entry>
                    </row>
                </tbody>
                <tbody>
                    <row>
                        <entry>cssStyle</entry><entry>no</entry><entry>string: the CSS style to use for rendering this
                        component</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

    </sect1>

    <sect1 id="visbeans"><title>Supported Visual Beans</title>
        <para>
        The following lists the supported visual beans that can be obtained via the &FormEvent;
        interface. More information on each of th ebeans methods can be found in the Javadoc API
        </para>
        <itemizedlist>
            <listitem>CheckBoxBean</listitem>
            <listitem>ErrorFrameBean</listitem>
            <listitem>FileInputBean</listitem>
            <listitem>FrameBean</listitem>
            <listitem>HiddenFieldBean</listitem>
            <listitem>ListBoxBean</listitem>
            <listitem>PanelBean</listitem>
            <listitem>PasswordBean</listitem>
            <listitem>RenderLinkBean</listitem>
            <listitem>TextBean</listitem>
            <listitem>TextAreaBean</listitem>
            <listitem>TextFieldBean</listitem>
            <listitem>RadioButtonBean</listitem>
        </itemizedlist>

    </sect1>

</chapter>
