<!--

<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

    Author:     Jason Novotny
    Version:    $Id$
-->

<chapter id="portlet-intro">
    <title>Portlet Concepts</title>
    <para>
    Portlets are defined as visual components that can be assimilated into portal web pages. Portlets
    provide "mini-applications" that can either display informational content or provide access to other services. The
    GridSphere portal allows users to customize their workspace by adding and removing portlets as needed. In addition
    to standard window states like minimized or maximized, portlets can also provide various "modes" such as
    <emphasis>view</emphasis>, <emphasis>edit</emphasis>, <emphasis>configure</emphasis> and
    <emphasis>help</emphasis>. As an example, consider a stock quote portlet that allows users to
    customize their stock quote information. View mode would display a user's stock information. Help mode provides users
    with informational content about the stock quote portlet and how to use it. Edit mode allows users to change the list
    of stocks they are intersted in monitoring. Finally, <emphasis>configure</emphasis> mode allows portlet
    administrators to change persistent settings such as the stock quote service that is contacted.
    </para>
    <para>
    As of GridSphere 2.0, two portlet development models are supported. The original portlet model was based upon the
    <trademark class='registered'>IBM WebSphere</trademark> Portlet API v4.1+ which means that existing WebSphere portlet
    applications can be easily ported for use within GridSphere. In addition, GridSphere provides an implementation
    of the JSR 168 Portlet API standard supported by IBM, Sun, Oracle, Plumtree, and many other application server vendors.
    The GridSphere framework is packaged as a web application that provides a portlet container for managing
    deployed portlets. GridSphere provides a collection of core portlets as well as a development environment for the
    creation of new portlet applications, both the WebSphere model and the JSR 168 standard.
    </para>
    <para>
    GridSphere provides built-in support for role based access control. A group is defined by a name, description and a
    collection of portlets that a user has access to including role access rights on a per portlet basis. Users may
    belong to one or more
    groups (meaning they have access to one or more portlet web applications) and they have a <emphasis>role</emphasis>
    within each group. the four supported roles are <emphasis>GUEST</emphasis>, <emphasis>USER</emphasis>,
    <emphasis>ADMIN</emphasis> and <emphasis>SUPER</emphasis>. A user with the GUEST role will obtain a generic view of
    the portal suitable to guests while a user that has logged on, will have the USER role and may be able to see the
    portlet personalized with their settings. A user with the ADMIN role can have access to a portlet's CONFIGURE mode
    described earlier and presumably configure a portlet's initialization settings. A user possesing the SUPER role can
    essentially do anything they want to any portlet and is essentially equivalent to having root access in an
    operating system. A portlet application may provide an optional group descriptor file, group.xml, which
        defines an initial group and access rules for the portlet collection.
    </para>
    <para>
    This document is intended as a reference guide on the GridSphere portal and does not cover too much portlet
        development. Please see the GridSphere tutorials for developing portlets within GridSphere or see
   <link linkend='portlet-resources' endterm="portlet-resources-title"/> for a useful set of web links offering more
        information.
    </para>
    <para>
    The Portlet Services API described in <link linkend='portlet-services' endterm="portlet-services-title"/>
    provides a very clean approach for the creation of reusable "services" that perform a set
    of tasks for a given portlet. Using the portlet API, a service instance can be obtained providing the portlet with
    additional functionality.
    </para>
    <para>
    The <link linkend='portlet-services' endterm="portlet-services-title"/> section is generally applicable to both
        WebSphere and JSR 168 developed portlets. The GridSphere portal container supports both APIs by using the WebSphere
        portlet API to bootstrap a special &PortletServlet; that is a WebSphere style portlet that is responsible for
        loading JSR 168 portlets. Please read the paper 
        <ulink url="http://www.gridsphere.org/gridsphere/wp-4/Documents/France/gridsphere.pdf">GridSphere: An Advanced Portal Framework</ulink>
        for more technical details.
    </para>

</chapter>
