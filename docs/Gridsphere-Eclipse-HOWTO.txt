Developing Gridsphere with Eclipse
----------------------------------

Author: Gergely KIS <kisg@mailbox.hu>

Questions, Comments, Enhancements Welcome :-)

1. Requirements
-Eclipse 2.1.1 (should work with Eclipse 3.0M4)
-Tomcat launcher Eclipse plugin (http://www.sysdeo.com/eclipse/tomcatPlugin.html)
-Tomcat4 patch for JSP debugging (http://www.sysdeo.com/eclipse/tomcatPlugin.html)
-Recent Tomcat4 distribution

2. Installation

- Install the eclipse plugin and the Tomcat4 patch
  (The patch is binary, so no recompilation of Tomcat needed)
- Use Window -> Customize Preferences... to activate the Tomcat plugin
- Use Window -> Preferences to specify the Path to the Tomcat installation
- Create a new Tomcat Project (e. g. GSProject)
	-Webapp context: /gridsphere
	-Webapp path: /webapps/gridsphere
- In the project's settings
	Can update server.xml
	Don't be a reloadable context (It messes up anyway)
	Redirect context logger to Eclipse

- Check out Gridsphere (module gridsphere in CVS) _into_ the project
	-Setup Java Build Configuration
		Add source folder gridsphere/src and gridsphere/tests
		Add the libraries in gridsphere/lib/ext
		Extend the variable TOMCAT_HOME
			Add the activation.jar from Tomcat to the project
			Add the xercesImpl.jar from Tomcat to the project
			Add the XmlParserAPIs.jar from Tomcat to the project
		Export the libraries and the source folders

- Create an external tool launch configuration for Ant
	Ant resource: gridsphere/config/build/eclipse.build.xml
	Working directory: gridsphere
	Parameters: -Dcatalina.home=/path/to/tomcat/installation -Dcatalina.base=${project_loc:/GSProject}
			-Declipse.build=${workspace_loc:/GSProject/path/to/build/directory}
	Targets (in this order): eclipse-deploy eclipse-create-database eclipse-resources
	Refresh project

- Optionally setup the Ant launch configuration to deploy local gridsphere configuration
	Additional parameter: -Dlocal.config=${resource_loc:/project/path/to/dir}
	Additional target: eclipse-local-config

- Launch the configuration -> Should deploy Gridsphere to the project

- From the project context menu -> Tomcat -> update server.xml
Go to server.xml, and adjust the generated Context so that it includes the crossContext="true" 
attribute. 

- In Window -> Preferences -> Tomcat add the project (here GSProject) to the Tomcat Classpath

- Change the Tomcat 4.1.x launch configuration to start in the Debug perspective

- Launch Tomcat