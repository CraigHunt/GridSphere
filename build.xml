<!-- =======================================================================

   Build file for the GridSphere Portal

Notes:
   This is a build file for use with the Jakarta Ant build tool.

Prerequisites:

   jakarta-ant from http://jakarta.apache.org

Build Instructions:
   To build, invoke "ant"

Copyright:
  2002,2003

- $Id$

============================================================================ -->

<project name="GridSphere" default="help" basedir=".">

    <property file="config/version.properties"/>

    <property name="optimize"    value="false"/>
    <property name="debug"       value="on"/>
    <property name="deprecation" value="true"/>

    <!-- Version properties -->
    <property name="version"         value="1.0" />
    <property name="release"         value="alpha" />
    <property name="version.release" value="${gridsphere.version} ${gridsphere.release}"/>
    <property name="gridsphere.name" value="GridSphere Portal Framework API ${version.release}" />

    <!-- GridSphere build and dist directories -->
    <property name="gridsphere.build" value="build"/>
    <property name="gridsphere.dist"  value="dist"/>


    <!--- Type of SQL Database to use -->
    <property name="sql.database" value="hsqldb"/>

    <!-- GridSphere webapps files -->
    <property name="gswebapp.dir"   value="webapps/gridsphere"/>
    <property name="corewebapp.dir" value="webapps/coreportlets"/>
    <property name="gridwebapp.dir" value="webapps/gridportlets"/>
    <property name="exwebapp.dir"   value="webapps/exampleportlets"/>
    <property name="manwebapp.dir"  value="webapps/gsmanager"/>

    <!-- GridSphere DocBook documentation -->
    <property name="docbook.dir" value="docs/docbook"/>

    <!-- GridSphere build targets -->
    <property name="build.lib"     value="${gridsphere.build}/lib"/>
    <property name="build.db"      value="${gridsphere.build}/db"/>
    <property name="build.classes" value="${gridsphere.build}/classes"/>
    <property name="build.webapps" value="${gridsphere.build}/webapps"/>
    <property name="build.docs"    value="${gridsphere.build}/docs"/>
    <property name="build.javadoc" value="${build.docs}/javadocs"/>
    <property name="build.tests"   value="${gridsphere.build}/tests"/>

    <property name="GRIDSPHERE_HOME" value=""/>

    <property environment="env"/>

    <!-- =================================================================== -->
    <!-- Sets the CLASSPATH                                                  -->
    <!-- =================================================================== -->
    <path id="classpath">
        <pathelement location="${build.classes}"/>

        <fileset dir="${env.CATALINA_HOME}/common/lib">
            <include name="*.jar"/>
        </fileset>

        <!-- this is for the XML JARs in Tomcat 4.1.x -->
        <fileset dir="${env.CATALINA_HOME}/common/endorsed">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="${java.class.path}"/>
    </path>

    <!-- =================================================================== -->
    <!-- Functions                                                           -->
    <!-- =================================================================== -->
    <target name="setenv" description="Check for libraries and print out config information">
        <mkdir dir="${gridsphere.build}"/>
        <mkdir dir="${build.lib}"/>
        <mkdir dir="${build.db}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.webapps}"/>
        <mkdir dir="${build.docs}"/>

        <available property="cog.present"
            classname="org.globus.common.Version"
            classpathref="classpath"/>

        <available property="log4j.present"
            classname="org.apache.log4j.Logger"
            classpathref="classpath"/>

        <available property="junit.present"
            classname="junit.framework.TestCase"
            classpathref="classpath"/>

        <copy file="config/log4j.properties" toDir="${build.classes}"/>

        <echo message="--- Build environment for ${project} ---" />
        <echo message="--- Flags (Note: If the {property name} is displayed,"/>
        <echo message="           then the component is not present)" />
        <echo message=""/>

        <echo message="ANT_HOME is set to = ${env.ANT_HOME}"/>
        <echo message="JAVA_HOME is set to = ${env.JAVA_HOME}"/>
        <echo message="CATALINA_HOME is set to = ${env.CATALINA_HOME}"/>
        <echo message="${classpath}"/>

        <echo message="=== Required Libraries ===" />
        <echo message="log4j.present=${log4j.present}" />

        <echo message=""/>
        <echo message="--- Optional Libraries ---" />
        <echo message="junit.present=${junit.present}" />
        <echo message=""/>
        <echo message="--- Property values ---" />
        <echo message="debug=${debug}" />
        <echo message="deprecation=${deprecation}" />
        <echo message="optimize=${optimize}" />
    </target>

    <!-- =================================================================== -->
    <!-- Print usage information                                             -->
    <!-- =================================================================== -->
    <target name="help" description="shows help about useful target">
        <echo message="target                 description"/>
        <echo message="-----------------------------------------------------------------"/>
        <echo message="install-fresh          will do everything (clean, compile, docs, "/>
        <echo message="                           mapping,jar,deploy)                   "/>
        <echo message="clean                  will clean up the build dir               "/>
        <echo message="runtests               will build and run the tests              "/>
        <echo message="deploy                 deploys GS to tomcat                      "/>
        <echo message="dist                   builds a binary GS distribution           "/>
        <echo message="force-mapping          will rebuild the mapping file for castor  "/>
        <echo message="force-database         will rebuild the databasestructure        "/>
        <echo message="                           in the deployed gridsphere            "/>
    </target>

    <!-- =================================================================== -->
    <!-- Builds and deploys GridSphere                                       -->
    <!-- =================================================================== -->
    <target name="install-fresh" depends="clean,compile-all,docs-all,deploy" description="Build and deploy GridSphere"/>

    <!-- =================================================================== -->
    <!-- Updates GridSphere source code                                      -->
    <!-- =================================================================== -->
    <target name="update" description="Update code from CVS">
        <cvs command="update -dP"/>
    </target>

<!-- +++++++++++++++++ START COMPILE +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- =================================================================== -->
    <!-- Compiles all source code in distribution                            -->
    <!-- =================================================================== -->
    <target name="compile-all" depends="compile-core, compile-portlets, compile-unit-tests" description="Compiles all source code in distribution"/>


    <!-- =================================================================== -->
    <!-- Compiles GridSphere core framework source code                      -->
    <!-- =================================================================== -->
    <target name="compile-core" depends="setenv" description="Compile GridSphere source code">
        <javac  srcdir="src"
            destdir="${build.classes}"
            excludes="org/gridlab/gridsphere/portlets/**"
            classpathref="classpath"
            debug="${debug}"
            optimize="${optimize}"
            deprecation="${deprecation}">
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles GridSphere portlets                                        -->
    <!-- =================================================================== -->
    <target name="compile-portlets" depends="compile-core" description="Compile GridSphere portlets">
        <echo>Compiling GridSphere Portlets</echo>
        <javac srcdir="src/org/gridlab/gridsphere/portlets"
            destdir="${build.classes}"
            classpathref="classpath"
            debug="${debug}"
            optimize="${optimize}"
            deprecation="${deprecation}">
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles JUnit tests                                            -->
    <!-- =================================================================== -->
    <target name="compile-unit-tests" if="junit.present" depends="compile-core" description="Compiles all JUnit tests">
        <javac srcdir="tests"
		    destdir="${build.classes}"
		    classpathref="classpath"
		    debug="${debug}"
		    optimize="${optimize}"
		    deprecation="${deprecation}">
	    </javac>
    </target>

<!-- +++++++++++++++++ END COMPILE +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


<!-- +++++++++++++++++ START JAR CREATION +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- =================================================================== -->
    <!-- Creates a GridSphere JAR library archive configured for Tomcat      -->
    <!-- =================================================================== -->
    <target name="gridsphere-tomcat-jar" depends="compile-core" description="Create gridsphere.jar for Tomcat">

        <property name="CATALINA_HOME" value="${env.CATALINA_HOME}"/>
        <property name="GRIDSPHERE_WEBAPP" value="${env.CATALINA_HOME}/${gswebapp.dir}"/>
        <property name="GRIDSPHERE_HOME" value="${CATALINA_HOME}/gridsphere"/>
        <property name="DB_DATABASE" value="gridsphere"/>

        <antcall target="make-gridsphere-jar"/>

    </target>

    <!-- =================================================================== -->
    <!-- Creates a GridSphere JAR library archive configured for JUnit       -->
    <!-- =================================================================== -->
    <target name="gridsphere-junit-jar" depends="compile-core" description="Create gridsphere.jar">

        <property name="CATALINA_HOME" value="Unit Testing"/>
        <property name="GRIDSPHERE_HOME" value="${gridsphere.build}/gridsphere"/>
        <property name="GRIDSPHERE_WEBAPP" value="${gridsphere.build}/${gswebapp.dir}"/>
        <property name="DB_DATABASE" value="junit"/>

        <antcall target="make-gridsphere-jar"/>

    </target>

    <!-- =================================================================== -->
    <!-- Internal target to create the GridSphere JAR library archive        -->
    <!-- =================================================================== -->
    <target name="make-gridsphere-jar">

        <!-- include the preprocessed gridsphere.properties file -->
        <copy file="config/gridsphere.properties" tofile="${build.classes}/gridsphere/gridsphere.properties"/>

        <copy file="config/log4j.properties" tofile="${build.classes}/log4j.properties" />

        <!-- gridsphere.properties location in build dir -->
        <property name="gridsphere.properties"
                  value="${build.classes}/gridsphere/gridsphere.properties"/>
        <property name="DB_CONFIG_FILE"
                  value="${GRIDSPHERE_WEBAPP}/WEB-INF/conf/${sql.database}.xml"/>

        <!-- Fills in appropriate configuration values for Tomcat -->
        <replace file="${gridsphere.properties}"
                 token="@CATALINA_HOME@"
                 value="${CATALINA_HOME}"/>
        <replace file="${gridsphere.properties}"
                 token="@GRIDSPHERE_WEBAPP@"
                 value="${GRIDSPHERE_WEBAPP}"/>
        <replace file="${gridsphere.properties}"
                 token="@GRIDSPHERE_HOME@"
                 value="${GRIDSPHERE_HOME}"/>
        <replace file="${gridsphere.properties}"
                 token="@DB_CONFIG_FILE@"
                 value="${DB_CONFIG_FILE}"/>
        <replace file="${gridsphere.properties}"
                 token="@DB_DATABASE@"
                 value="${DB_DATABASE}"/>
        <replace file="${gridsphere.properties}"
                 token="@GRIDSPHERE_VERSION@"
                 value="${gridsphere.version}"/>
        <replace file="${gridsphere.properties}"
                 token="@GRIDSPHERE_RELEASE@"
                 value="${gridsphere.release}"/>

        <echo message="Configuring GridSphere jar settings:"/>
        <echo message="GridSphere Release  ${version.release}"/>
        <echo message="Replaced CATALINA_HOME with : ${CATALINA_HOME}"/>
        <echo message="Replaced GRIDSPHERE_WEBAPP with : ${GRIDSPHERE_WEBAPP}"/>
        <echo message="Replaced GRIDSPHERE_HOME with : ${GRIDSPHERE_HOME}"/>
        <echo message="Replaced DB Configuration file  : ${DB_CONFIG_FILE}"/>
        <echo message="Replaced DB Database with : ${DB_DATABASE}"/>

        <jar jarfile="${build.lib}/gridsphere.jar" basedir="${build.classes}" >
            <include name="log4j.properties" />
            <include name="org/**" />
            <include name="gridsphere/**" />
            <!-- don't include portlet API -->
            <exclude name="org/gridlab/gridsphere/portlet/**"/>
            <exclude name="org/gridlab/gridsphere/event/**"/>
            <!-- don't include portlets -->
            <exclude name="org/gridlab/gridsphere/portlets/**"/>
            <!-- don't include portlet widgets tag library -->
            <exclude name="org/gridlab/gridsphere/tags/**"/>
        </jar>
     </target>


    <!-- =================================================================== -->
    <!-- Creates a Portlet API JAR library archive                           -->
    <!-- =================================================================== -->
    <target name="portlet-jar" depends="compile-core" description="Create ${build.lib}/portlet.jar">
        <jar jarfile="${build.lib}/portlet-api.jar" basedir="${build.classes}" >
            <include name="log4j.properties"/>
            <include name="org/gridlab/gridsphere/portlet/**"/>
            <include name="org/gridlab/gridsphere/event/**"/>
            <include name="config/log4j.properties"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the Portlet Widgets Tag Library                             -->
    <!-- =================================================================== -->
    <target name="portlet-widgets-jar" depends="compile-core" description="Create ${build.lib}/portlet-widget-tags.jar">
        <jar jarfile="${build.lib}/portlet-widget-tags.jar" basedir="${build.classes}" >
            <include name="org/gridlab/gridsphere/tags/**" />
            <metainf dir="${gswebapp.dir}/WEB-INF/tlds"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates GridSphere manager portlet                                  -->
    <!-- =================================================================== -->
    <target name="manager-portlet-jar" depends="compile-portlets" description="Create ${build.lib}/gsmanager-portlet.jar">
        <jar jarfile="${build.lib}/gsmanager-portlet.jar" basedir="${build.classes}" >
            <include name="org/gridlab/gridsphere/portlets/manager/**" />
            <include name="config/log4j.properties"/>
        </jar>
    </target>


    <!-- =================================================================== -->
    <!-- Creates example portlets required by GridSphere                     -->
    <!-- Creates core portlets required by GridSphere                        -->
    <!-- =================================================================== -->
    <target name="core-portlets-jar" depends="compile-portlets" description="Create ${build.lib}/coreportlets.jar">
        <jar jarfile="${build.lib}/coreportlets.jar" basedir="${build.classes}" >
            <include name="org/gridlab/gridsphere/portlets/PortletBean.class" />
            <include name="org/gridlab/gridsphere/portlets/core/**" />
            <include name="config/log4j.properties"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates grid portlets required by GridSphere                        -->
    <!-- =================================================================== -->
    <target name="grid-portlets-jar" depends="compile-portlets" description="Create ${build.lib}/gridportlets.jar">
        <jar jarfile="${build.lib}/gridportlets.jar" basedir="${build.classes}" >
            <include name="org/gridlab/gridsphere/portlets/PortletBean.class" />
            <include name="org/gridlab/gridsphere/portlets/grid/**" />
            <include name="config/log4j.properties"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates example portlets required by GridSphere                        -->
    <!-- =================================================================== -->
    <target name="example-portlets-jar" depends="compile-portlets" description="Create ${build.lib}/exampleportlets.jar">
        <jar jarfile="${build.lib}/exampleportlets.jar" basedir="${build.classes}" >
            <include name="org/gridlab/gridsphere/portlets/*" />
            <include name="org/gridlab/gridsphere/portlets/examples/**" />
            <include name="config/log4j.properties"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates all JAR's                                                   -->
    <!-- =================================================================== -->
    <target name="all-non-gridsphere-jars" depends="portlet-jar, portlet-widgets-jar, core-portlets-jar, grid-portlets-jar, example-portlets-jar, manager-portlet-jar" description="Creates all jars"/>


<!-- +++++++++++++++++ END JAR CREATION +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <!-- =================================================================== -->
    <!-- Cleans everything                                                   -->
    <!-- =================================================================== -->
    <target name="clean" description="Delete classes and existing library">
        <delete quiet="true" dir="${gridsphere.build}"/>
        <delete quiet="true" dir="${gridsphere.dist}"/>
    </target>

<!-- +++++++++++++++ START DATABASE STUFF ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- =================================================================== -->
    <!-- Creates castor definitions                                          -->
    <!-- =================================================================== -->
    <target name="configure-database" depends="doclet-mapping">
        <property name="DB_CONFIG_FILE"
                  value="${gridsphere.build}/${gswebapp.dir}/WEB-INF/conf/${sql.database}.xml"/>
        <replace file="${DB_CONFIG_FILE}"
                 token="@GRIDSPHERE_WEBAPP@"
                 value="${GRIDSPHERE_WEBAPP}"/>
        <replace file="${DB_CONFIG_FILE}"
                 token="@GRIDSPHERE_HOME@"
                 value="${GRIDSPHERE_HOME}"/>
        <replace file="${DB_CONFIG_FILE}"
                 token="@DB_DATABASE@"
                 value="${DB_DATABASE}"/>
    </target>

    <target name="check-mapping">
        <echo message="force mapping: ${var_force_mapping}"/>
        <condition property="var_force_mapping">
            <not>
                <available file="${gridsphere.build}/${gswebapp.dir}/WEB-INF/conf/mapping/docletmapping.xml"/>
            </not>
        </condition>
    </target>

   <!-- <target name="doclet-mapping" depends="check-mapping" description="creates the mapping files for castor" if="var_force_mapping">  -->
     <target name="doclet-mapping" depends="gridsphere-tomcat-jar">
        <javadoc packagenames="org.gridlab.gridsphere.*"
            sourcepath="src"
            private="true"
            doclet="org.castor.doclet.ddl.DDL"
            docletpath="lib/jdom.jar;lib/castor-doclet.jar"
            additionalparam=" -J-DFILE=${build.db}/dbcreate.sql -J-DDB_TYPE=db2 -J-DLOG=1">
            <classpath refid="classpath"/>
        </javadoc>
        <javadoc packagenames="org.gridlab.gridsphere.*"
            sourcepath="src"
            private="true"
            doclet="org.castor.doclet.jdo.JDO"
            docletpath="lib/jdom.jar;lib/castor-doclet.jar"
            additionalparam="-J-DFILE=${gridsphere.build}/${gswebapp.dir}/WEB-INF/conf/mapping/docletmapping.xml -J-DLOG=1">
            <classpath refid="classpath"/>
        </javadoc>
    </target>

    <target name="create-db" depends="doclet-mapping">
        <sql driver="org.hsqldb.jdbcDriver"
           url="jdbc:hsqldb:${GRIDSPHERE_HOME}/db/gridsphere-db"
           userid="sa"
           password=""
           onerror="continue"
           src="${build.db}/dbcreate.sql">
           <classpath refid="classpath"/>
        </sql>
    </target>
<!-- +++++++++++++++ START DOCUMENTATION ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <target name="docs-all" depends="javadocs" description="Create GridSphere Documentation"/>

    <!-- =================================================================== -->
    <!-- Creates all the API documentation                                   -->
    <!-- =================================================================== -->
    <target name="javadocs" depends="setenv" description="Create GridSphere Javadocs">
        <delete quiet="true" dir="${build.javadoc}"/>
        <mkdir dir="${build.javadoc}"/>
        <javadoc packagenames="org.gridlab.gridsphere.*"
                 sourcepath="src"
                 classpathref="classpath"
                 destdir="${build.javadoc}"
                 author="true"
                 version="true"
                 splitindex="true"
                 use="true"
                 maxmemory="180m"
                 windowtitle="${gridsphere.name}"
                 doctitle="${gridsphere.name}"
                 bottom="Copyright &#169; 2002,2003 GridLab Project. All Rights Reserved.">

            <link href="http://java.sun.com/products/jdk/1.2/docs/api/"
                  offline="true"
                  packageListLoc="package-lists/jdk"/>

            <link href="http://jakarta.apache.org/log4j/docs/api/"
                  offline="true"
                  packageListLoc="package-lists/log4j"/>

            <link href="http://www.junit.org/junit/javadoc/3.8/"
                  offline="true"
                  packageListLoc="package-lists/junit"/>

            <group title="GridSphere Core Framework"
                   packages="org.gridlab.gridsphere:org.gridlab.gridsphere.*"/>

            <group title="GridSphere Portlet API"
                   packages="org.gridlab.gridsphere.event:org.gridlab.gridsphere.event.*,
                             org.gridlab.gridsphere.portlet:org.gridlab.gridsphere.portlet.*,
                             org.gridlab.gridsphere.portlet.service:org.gridlab.gridsphere.portlet.service.*,
                             org.gridlab.gridsphere.portlet.service.spi:org.gridlab.gridsphere.portlet.service.spi.*"/>

            <group title="GridSphere Portlet API Implementation"
                   packages="org.gridlab.gridsphere.event.impl:org.gridlab.gridsphere.event.impl.*,
                             org.gridlab.gridsphere.portlet.impl:org.gridlab.gridsphere.portlet.impl.*,
                             org.gridlab.gridsphere.portlet.service.impl:org.gridlab.gridsphere.portlet.service.impl.*,
                             org.gridlab.gridsphere.portlet.service.spi.impl:org.gridlab.gridsphere.portlet.service.spi.impl.*"/>

            <group title="GridSphere Portal Component Library"
                   packages="org.gridlab.gridsphere.layout:org.gridlab.gridsphere.layout.*"/>

            <group title="GridSphere UI Tag Library"
                   packages="org.gridlab.gridsphere.tags:org.gridlab.gridsphere.tags.*"/>

            <group title="GridSphere Portlet Service Library"
                   packages="org.gridlab.gridsphere.services:org.gridlab.gridsphere.services.*"/>

            <group title="GridSphere Portlets"
                   packages="org.gridlab.gridsphere.portlets:org.gridlab.gridsphere.portlets.*"/>

        </javadoc>
    </target>

    <!-- =================================================================== -->
    <!-- Builds the GridSphere docbook documentation                         -->
    <!-- =================================================================== -->
    <target name="docbook" description="Builds the GridSphere docbook documentation.">
        <ant dir="${docbook.dir}" target="docbook" inheritAll="false"/>
    </target>

<!-- +++++++++++++++ END DOCUMENTATION ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

<!-- +++++++++++++++ END DATABASE STUFF ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

<!-- +++++++++++++++ START WAR CREATION ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- =================================================================== -->
    <!-- Creates the GridSphere WAR file                                     -->
    <!-- =================================================================== -->
    <target name="gridsphere-war" depends="gridsphere-tomcat-jar" description="Create GridSphere WAR">
        <war warfile="${build.webapps}/gridsphere.war" update="true"
            webxml="${gswebapp.dir}/WEB-INF/web.xml">
            <fileset dir="${gswebapp.dir}">
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the core portlets WAR file                                  -->
    <!-- =================================================================== -->
    <target name="core-portlets-war" depends="core-portlets-jar" description="Create coreportlets WAR">
        <war warfile="${build.webapps}/coreportlets.war" update="true"
            webxml="${corewebapp.dir}/WEB-INF/web.xml">
            <lib dir="${build.lib}">
                <include name="coreportlets.jar"/>
            </lib>
            <fileset dir="${corewebapp.dir}">
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the grid portlets WAR file                                  -->
    <!-- =================================================================== -->
    <target name="grid-portlets-war" depends="grid-portlets-jar" description="Create gridportlets WAR">
        <war warfile="${build.webapps}/gridportlets.war" update="true"
            webxml="${gridwebapp.dir}/WEB-INF/web.xml">
            <lib dir="${build.lib}">
                <include name="gridportlets.jar"/>
            </lib>
            <fileset dir="${gridwebapp.dir}">
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the example portlets WAR file                               -->
    <!-- =================================================================== -->
    <target name="example-portlets-war" depends="example-portlets-jar" description="Create exampleportlets WAR">
        <war warfile="${build.webapps}/exampleportlets.war" update="true"
            webxml="${exwebapp.dir}/WEB-INF/web.xml">
            <lib dir="${build.lib}">
                <include name="exampleportlets.jar"/>
            </lib>
            <fileset dir="${exwebapp.dir}">
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the GS manager portlet WAR file                             -->
    <!-- =================================================================== -->
    <target name="manager-portlet-war" depends="manager-portlet-jar" description="Create gsmanager WAR">
        <war warfile="${build.webapps}/gsmanager-portlet.war" update="true"
            webxml="${manwebapp.dir}/WEB-INF/web.xml">
            <lib dir="${build.lib}">
                <include name="gsmanager-portlet.jar"/>
            </lib>
            <fileset dir="${manwebapp.dir}">
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Creates all the WAR files                                           -->
    <!-- =================================================================== -->
    <target name="war" depends="example-portlets-war, grid-portlets-war, core-portlets-war, gridsphere-war, manager-portlet-war" description="Make WAR!"/>

<!-- +++++++++++++++ END WAR CREATION ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


<!-- +++++++++++++++ START DEPLOY  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- =================================================================== -->
    <!-- Deploys GridSphere to Tomcat                                        -->
    <!-- =================================================================== -->
    <target name="deploy" depends="gridsphere-tomcat-jar, all-non-gridsphere-jars, deploy-portlets" description="Deploys GridSphere to a local server">
        <!-- Make core gridsphere directory if necessary -->
        <mkdir dir="${GRIDSPHERE_HOME}"/>
        <mkdir dir="${GRIDSPHERE_HOME}/creds"/>

        <!-- where hsqldb stores the datafiles -->
        <mkdir dir="${GRIDSPHERE_HOME}/db"/>

        <!-- copy the gridsphere web app to build directory -->
        <copy todir="${build.webapps}/gridsphere">
            <fileset dir="${gswebapp.dir}"/>
        </copy>

        <!-- preprocess database file -->
        <copy todir="${env.CATALINA_HOME}/shared/lib">
            <fileset dir="lib">
                <include name="*.jar"/>
                <exclude name="servlet*.jar"/>
            </fileset>
            <fileset dir="${build.lib}">
                <exclude name="portlet-widget-tags.jar"/>
                <exclude name="gsmanager-portlet.jar"/>
                <exclude name="coreportlets.jar"/>
                <exclude name="gridportlets.jar"/>
                <exclude name="exampleportlets.jar"/>
            </fileset>
        </copy>

        <antcall target="configure-database"/>

        <sql driver="org.hsqldb.jdbcDriver"
           url="jdbc:hsqldb:${GRIDSPHERE_HOME}/db/gridsphere-db"
           userid="sa"
           password=""
           onerror="continue"
           src="${build.db}/dbcreate.sql">
           <classpath refid="classpath"/>
        </sql>

        <copy todir="${env.CATALINA_HOME}/webapps/gridsphere">
            <fileset dir="${build.webapps}/gridsphere"/>
        </copy>

        <copy file="${build.lib}/portlet-widget-tags.jar" todir="${env.CATALINA_HOME}/webapps/gridsphere/WEB-INF/lib"/>
        <copy file="config/log4j.properties" tofile="${env.CATALINA_HOME}/webapps/gridsphere/WEB-INF/log4j.properties" />

    </target>

    <!-- =================================================================== -->
    <!-- Deploys GridSphere portlets to a local server                       -->
    <!-- =================================================================== -->
    <target name="deploy-portlets" depends="deploy-manager-portlet, deploy-core-portlets, deploy-grid-portlets" description="Deploys GridSphere portlets to a local server">
    </target>

    <!-- =================================================================== -->
    <!-- Deploys GS manager portlet to a local server                        -->
    <!-- =================================================================== -->
    <target name="deploy-manager-portlet" depends="manager-portlet-jar" description="Deploys GridSphere manager portlet to a local server">
        <copy todir="${build.webapps}/gsmanager">
            <fileset dir="${manwebapp.dir}"/>
        </copy>
        <copy file="${build.lib}/portlet-widget-tags.jar" todir="${env.CATALINA_HOME}/${manwebapp.dir}/WEB-INF/lib"/>
        <copy file="${build.lib}/gsmanager-portlet.jar" todir="${env.CATALINA_HOME}/${manwebapp.dir}/WEB-INF/lib"/>
        <copy todir="${env.CATALINA_HOME}/${manwebapp.dir}">
            <fileset dir="${build.webapps}/gsmanager"/>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Deploys GS core portlets to a local server                          -->
    <!-- =================================================================== -->
    <target name="deploy-core-portlets" depends="core-portlets-jar" description="Deploys core portlets to a local server">
        <copy todir="${build.webapps}/coreportlets">
            <fileset dir="${corewebapp.dir}"/>
        </copy>
        <copy todir="${env.CATALINA_HOME}/webapps/coreportlets">
            <fileset dir="${build.webapps}/coreportlets"/>
        </copy>
        <copy file="${build.lib}/portlet-widget-tags.jar" todir="${env.CATALINA_HOME}/webapps/coreportlets/WEB-INF/lib"/>
        <copy file="${build.lib}/coreportlets.jar" todir="${env.CATALINA_HOME}/webapps/coreportlets/WEB-INF/lib"/>
    </target>

    <!-- =================================================================== -->
    <!-- Deploys GS example portlets to a local server                       -->
    <!-- =================================================================== -->
    <target name="deploy-example-portlets" depends="example-portlets-jar" description="Deploys example portlets to a local server">
        <copy todir="${build.webapps}/exampleportlets">
            <fileset dir="${exwebapp.dir}"/>
        </copy>
        <copy todir="${env.CATALINA_HOME}/webapps/exampleportlets">
            <fileset dir="${build.webapps}/exampleportlets"/>
        </copy>
        <copy file="${build.lib}/portlet-widget-tags.jar" todir="${env.CATALINA_HOME}/webapps/exampleportlets/WEB-INF/lib"/>
        <copy file="${build.lib}/exampleportlets.jar" todir="${env.CATALINA_HOME}/webapps/exampleportlets/WEB-INF/lib"/>
    </target>

    <!-- =================================================================== -->
    <!-- Deploys GS grid portlets to a local server                          -->
    <!-- =================================================================== -->
    <target name="deploy-grid-portlets" depends="grid-portlets-jar" description="Deploys grid portlets to a local server">
        <copy todir="${build.webapps}/gridportlets">
            <fileset dir="${gridwebapp.dir}"/>
        </copy>
        <copy todir="${env.CATALINA_HOME}/webapps/gridportlets">
            <fileset dir="${build.webapps}/gridportlets"/>
        </copy>
        <copy file="${build.lib}/portlet-widget-tags.jar" todir="${env.CATALINA_HOME}/webapps/gridportlets/WEB-INF/lib"/>
        <copy file="${build.lib}/gridportlets.jar" todir="${env.CATALINA_HOME}/webapps/gridportlets/WEB-INF/lib"/>
    </target>

<!-- +++++++++++++++ END DEPLOY  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


<!-- +++++++++++++++ START TESTS +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- =================================================================== -->
    <!-- Runs all JUnit tests: needs optional.jar and junit in classpath     -->
    <!-- =================================================================== -->
    <target name="run-tests" depends="compile-unit-tests, gridsphere-junit-jar" if="junit.present" description="Runs all JUnit tests">
        <mkdir dir="${gridsphere.build}/reports"/>

        <junit printsummary="yes" fork="yes" haltonfailure="no">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${gridsphere.build}/lib/gridsphere.jar"/>
            </classpath>
            <test name="org.gridlab.gridsphere.AllJUnitTests" todir="${gridsphere.build}/reports">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>

    <target name="make-test-reports" depends="run-tests" if="junit.present" description="Execute Unit Tests">
       <mkdir dir="${gridsphere.build}/reports/html"/>
       <junitreport todir="${gridsphere.build}/reports">
            <fileset dir="${gridsphere.build}/reports">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${gridsphere.build}/reports/html"/>
        </junitreport>
    </target>

<!-- +++++++++++++++ END TESTS +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

<!-- ++++++++++++++ START CRUSECONTROL ++++++++++++++++++++ -->

    <target name="cruisecontrol" depends="clean" description="target for cruisecontrol">
        <mkdir dir="${gridsphere.build}/reports"/>
        <junit printsummary="yes" fork="yes" haltonfailure="no">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${gridsphere.build}/lib/gridsphere.jar"/>
            </classpath>
            <test name="org.gridlab.gridsphere.AllJUnitTests" todir="${gridsphere.build}/reports">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>

    <!-- =================================================================== -->
    <!-- Make GridSphere distribution                                        -->
    <!-- =================================================================== -->
    <target name="dist" depends="clean, gridsphere-tomcat-jar, all-non-gridsphere-jars, war" description="Build GridSphere binary distribution">
        <mkdir dir="${gridsphere.dist}"/>
        <mkdir dir="${gridsphere.dist}/webapps"/>
        <copy todir="${gridsphere.dist}">
            <fileset dir="${gridsphere.build}"/>
        </copy>
    </target>

</project>
