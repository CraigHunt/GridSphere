<!-- =======================================================================

   Build file for the GridSphere Portal source code

Notes:
   This is a build file for use with the Jakarta Ant build tool.

Prerequisites:

   jakarta-ant from http://jakarta.apache.org

Build Instructions:
   Invoke "ant help"

Copyright:
  2002,2003,2004

- $Id$

============================================================================ -->

<project name="GridSphere" default="help" basedir=".">

    <!-- get environment vars -->
    <property environment="env"/>

    <!-- Needed to import ant-contrib tasks -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="lib/ant-contrib-0.3.jar"/>
        </classpath>
    </taskdef>

    <taskdef resource="cactus.tasks">
        <classpath>
            <pathelement location="lib/cactus-integration-ant-20030401.jar"/>
        </classpath>
    </taskdef>

    <property file="build.properties"/>

    <property name="optimize" value="false"/>
    <property name="debug" value="on"/>
    <property name="deprecation" value="false"/>

    <!-- Version properties -->
    <property name="version" value="2.0.1"/>
    <property name="release" value="RC 1"/>
    <property name="version.release" value="${version} ${release}"/>
    <property name="gridsphere.project" value="gridsphere"/>
    <property name="gridsphere.name" value="GridSphere ${version.release}"/>
    <property name="gridsphere.api" value="GridSphere Portal Framework API ${version.release}"/>

    <!-- GridSphere build and dist directories -->

    <!-- GridSphere webapps files -->
    <property name="gswebapp.dir" value="webapps/gridsphere"/>

    <!-- GridSphere DocBook documentation -->
    <property name="docbook.dir" value="docs/docbook"/>

    <property name="projects.dir" value="projects"/>

    <!-- GridSphere build targets -->
    <property name="build.lib" value="${gridsphere.build}/lib"/>
    <property name="build.classes" value="${gridsphere.build}/classes"/>
    <property name="build.webapps" value="${gridsphere.build}/webapps"/>
    <property name="build.docs" value="${gridsphere.build}/docs"/>
    <property name="build.javadoc" value="${build.docs}/javadocs"/>
    <property name="build.tests" value="${gridsphere.build}/tests"/>

    <!-- Check for catalina.sh in CATALINA_HOME/bin -->
    <target name="check-catalina">
        <condition property="catalina.exists">
            <available file="${env.CATALINA_HOME}/bin/bootstrap.jar"/>
        </condition>
        <fail message="Unable to find Tomcat! Make sure you have set $CATALINA_HOME set" unless="catalina.exists"/>
    </target>

    <!-- =================================================================== -->
    <!-- Sets the CLASSPATH                                                  -->
    <!-- =================================================================== -->
    <path id="classpath">

        <pathelement location="${build.classes}"/>

	<!-- this is for ANT jars that are used -->
	<fileset dir="${env.ANT_HOME}/lib">
 	    <include name="*.jar"/>
        </fileset>
	
        <!-- this is for the servlet JARs in Tomcat 4.1.x -->
        <fileset dir="${env.CATALINA_HOME}/common/lib">
            <include name="activation.jar"/>
            <include name="servlet.jar"/>
        </fileset>

        <!-- this is for the servlet JARs in Tomcat 5.0.x -->
        <fileset dir="${env.CATALINA_HOME}/common/lib">
            <include name="servlet-api.jar"/>
            <include name="jsp-api.jar"/>
        </fileset>

        <!-- this is for the XML JARs in Tomcat 4.1.x -->
        <fileset dir="${env.CATALINA_HOME}/common/endorsed">
            <include name="*.jar"/>
        </fileset>

        <fileset dir="lib">
            <exclude name="*.LICENSE"/>
            <include name="*.jar"/>
        </fileset>

        <pathelement path="${java.class.path}"/>
    </path>

    <!-- =================================================================== -->
    <!-- Functions                                                           -->
    <!-- =================================================================== -->
    <target name="setenv" depends="check-catalina" description="Check for libraries and print out config information">

        <mkdir dir="${gridsphere.build}"/>
        <mkdir dir="${projects.dir}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.lib}"/>
        <mkdir dir="${build.webapps}"/>
        <mkdir dir="${build.docs}"/>


        <echo message="--- Build environment for ${gridsphere.name} ---"/>
        <echo message="--- Flags (Note: If the {property name} is displayed,"/>
        <echo message="           then the component is not present)"/>
        <echo message=""/>

        <echo message="ANT_HOME is set to = ${env.ANT_HOME}"/>
        <echo message="JAVA_HOME is set to = ${env.JAVA_HOME}"/>
        <echo message="CATALINA_HOME is set to = ${env.CATALINA_HOME}"/>


        <echo message=""/>
        <echo message="--- Property values ---"/>
        <echo message="debug=${debug}"/>
        <echo message="deprecation=${deprecation}"/>
        <echo message="optimize=${optimize}"/>


    </target>

    <!-- =================================================================== -->
    <!-- Print usage information                                             -->
    <!-- =================================================================== -->
    <target name="help" description="shows help about useful targets">
        <echo message="target                 description"/>
        <echo message="-----------------------------------------------------------------"/>
        <echo message="install                Builds and deploys GridSphere and makes documentation"/>
        <echo message="clean                  Cleans up the build directory              "/>
        <echo message="compile                Compiles GridSphere source code   "/>
        <echo message="create-database        Creates a new GridSphere database"/>
        <echo message="docs                   Creates Javadoc API and GridSphere guides  "/>
        <echo message="javadocs               Creates only Javadoc API"/>
        <echo message="run-tests              Builds and runs the JUnit tests            "/>
        <echo message="test-reports           Creates HTML test reports from the JUnit test results"/>
        <echo message="new-project            Creates a new portlet project in projects directory"/>
        <echo message="update-project         Updates a new portlet project in projects directory"/>
        <echo message="deploy                 Deploys GS to tomcat                       "/>
    </target>

    <!-- =================================================================== -->
    <!-- Builds and deploys GridSphere                                       -->
    <!-- =================================================================== -->
    <target name="install" depends="license, splash, compile, docs, deploy" description="Build and deploy GridSphere">
        <antcall target="create-database"/>
        <echo message="GridSphere successfully installed."/> 
        <echo message="Please start up Tomcat and go to http://127.0.0.1/gridsphere/gridsphere"/>
        <echo message="Login as root with empty password"/>
    </target>

    <!-- =================================================================== -->
    <!-- Prints GridSphere license agreement                                 -->
    <!-- =================================================================== -->
    <target name="license" description="Prints GridSphere license">
        <loadfile property="license" srcFile="LICENSE.txt"/>
        <echo message="${license}"/>
        <input message="Do you agree to these terms? Hit y or n" validargs="y,n" addProperty="agreed"/>
        <condition property="do.abort">
            <equals arg1="n" arg2="${agreed}"/>
        </condition>
        <fail if="do.abort">Build aborted by user.</fail>
    </target>

    <!-- =================================================================== -->
    <!-- Updates GridSphere source code                                      -->
    <!-- =================================================================== -->
    <target name="update" description="Update code from CVS">
        <cvs command="update -dP"/>

        <antcall target="deploy-install"/>

        <antcall target="update-database"/>

        <copy todir="${env.CATALINA_HOME}/webapps">
            <fileset dir="${build.webapps}"/>
        </copy>

    </target>

    <!-- +++++++++++++++++ START COMPILE +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- =================================================================== -->
    <!-- Compiles all source code in distribution                            -->
    <!-- =================================================================== -->
    <target name="compile-all" depends="compile-projects, compile-tests" description="Compiles all source code in distribution"/>

    <target name="compile-projects" depends="compile" description="Compile all portlet subprojects">
        <foreach target="compile-project" param="thisEnv">
            <path>
                <dirset dir="${projects.dir}" includes="*"/>
            </path>
        </foreach>
    </target>

    <target name="compile-project">
        <ant dir="${thisEnv}" target="compile"/>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles core framework                                             -->
    <!-- =================================================================== -->
    <target name="compile" depends="setenv" description="Compile core framework">
        <echo>Compiling core framework</echo>
        <javac srcdir="src"
            destdir="${build.classes}"
            classpathref="classpath"
            debug="${debug}"
            optimize="${optimize}"
            deprecation="${deprecation}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles JUnit tests                                                -->
    <!-- =================================================================== -->
    <target name="compile-tests" depends="compile" description="Compiles all JUnit tests">
        <echo>Compiling JUnit Tests</echo>
        <javac srcdir="tests"
            destdir="${build.classes}"
            classpathref="classpath"
            debug="${debug}"
            optimize="${optimize}"
            deprecation="${deprecation}">
        </javac>
    </target>

    <!-- +++++++++++++++++ END COMPILE +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- =================================================================== -->
    <!-- Internal target to create the GridSphere JAR library archive        -->
    <!-- =================================================================== -->
    <target name="gridsphere-jar" depends="compile" description="Makes gridsphere JAR">

        <ant target="make-gridsphere-jar"/>
    </target>

    <!-- =================================================================== -->
    <!-- Internal target to create the GridSphere JAR library archive        -->
    <!-- =================================================================== -->
    <target name="gridsphere-test-jar" depends="compile-tests" description="Makes gridsphere test JAR">

        <echo message="Configuring Test Database"/>

        <jar jarfile="${build.lib}/gridsphere-test.jar" basedir="${build.classes}">
            <include name="**/*Test.class"/>
        </jar>

        <ant target="make-gridsphere-jar"/>

    </target>

    <target name="make-gridsphere-jar" depends="compile">

        <mkdir dir="${build.classes}/gridsphere"/>

      <!--  <copy file="${gswebapp.dir}/WEB-INF/classes/log4j.properties"
            tofile="${build.classes}/gridsphere/log4j.properties"/>   -->

        <echo message="Configuring GridSphere jar settings:"/>
        <echo message="GridSphere Release  ${version.release}"/>
        <echo message="Replaced CATALINA_HOME with : ${env.CATALINA_HOME}"/>
        <echo message="Replaced GRIDSPHERE_VERSION with : ${version}"/>
        <echo message="Replaced GRIDSPHERE_RELEASE with : ${release}"/>

        <jar jarfile="${build.lib}/gridsphere.jar" basedir="${build.classes}" defaultexcludes="yes">

            <include name="org/**"/>
           <!-- <include name="gridsphere/log4j.properties"/>  -->
            <!-- don't include portlet API -->
            <exclude name="org/gridlab/gridsphere/portlet/**"/>
            <!-- don't include gs servlet -->
            <exclude name="org/gridlab/gridsphere/servlets/**"/>
            <exclude name="org/gridlab/gridsphere/event/**"/>
            <!-- don't include portlet widgets tag library -->
            <exclude name="org/gridlab/gridsphere/provider/**"/>
            <!-- don't include GridSphere portlets  -->
            <exclude name="org/gridlab/gridsphere/portlets/**"/>

        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates a Portlet API JAR library archive                           -->
    <!-- =================================================================== -->
    <target name="portlet-jar" depends="compile" description="Create lib/portlet.jar">
        <jar jarfile="${build.lib}/portlet-api.jar" basedir="${build.classes}">
            <include name="org/gridlab/gridsphere/portlet/**"/>
            <exclude name="**/jsrimpl/**"/>
            <include name="org/gridlab/gridsphere/event/**"/>
            <exclude name="**/*Test.class"/>
          <!--  <include name="gridsphere/log4j.properties"/>  -->
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates a JSR Portlet API JAR library archive configured for Tomcat -->
    <!-- =================================================================== -->
    <target name="portlet-api-jar" depends="compile" description="Creates JSR portlet API JAR">
        <echo>Creating JSR portlet API JAR for Tomcat</echo>
        <jar jarfile="${build.lib}/portlet-jsr-api.jar" basedir="${build.classes}">
            <include name="javax/**"/>
            <include name="**/portlet/jsrimpl/**"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the GridSphere UI tags JAR                                  -->
    <!-- =================================================================== -->
    <target name="gridsphere-ui-tags-jar" depends="compile" description="Create lib/gridsphere-ui-tags.jar">
        <jar jarfile="${build.lib}/gridsphere-ui-tags.jar" basedir="${build.classes}">
            <include name="gridsphere/log4j.properties"/>
            <include name="org/gridlab/gridsphere/provider/portlet/**"/>
            <include name="org/gridlab/gridsphere/provider/portletui/tags/**"/>
            <metainf dir="${gswebapp.dir}/WEB-INF/tlds"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the GridSphere test JAR                                     -->
    <!-- =================================================================== -->
    <target name="gridsphere-provider-jar" depends="compile" description="Create lib/gridsphere-provider.jar">
        <copy todir="${build.classes}/gridsphere/resources">
            <fileset dir="config/resources"/>
        </copy>
        <jar jarfile="${build.lib}/gridsphere-provider.jar" basedir="${build.classes}">
            <include name="org/gridlab/gridsphere/provider/event/**"/>
            <include name="org/gridlab/gridsphere/provider/portletui/beans/**"/>
            <include name="org/gridlab/gridsphere/provider/portletui/model/**"/>
            <include name="gridsphere/**"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the GridSphere portlets JAR                                 -->
    <!-- =================================================================== -->
    <target name="coreportlets-jar" depends="compile" description="Create lib/coreportlets.jar">
        <jar jarfile="${build.lib}/coreportlets.jar" basedir="${build.classes}">
            <include name="org/gridlab/gridsphere/portlets/**"/>
            <include name="org/gridlab/gridsphere/servlets/**"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates all JAR's                                                   -->
    <!-- =================================================================== -->
    <target name="jar" depends="gridsphere-ui-tags-jar, gridsphere-provider-jar, portlet-api-jar, portlet-jar, coreportlets-jar" description="Creates all jars"/>

    <!-- =================================================================== -->
    <!-- Cleans everything                                                   -->
    <!-- =================================================================== -->
    <target name="clean-all" depends="clean-projects" description="Delete classes and existing library">
        <delete quiet="true" dir="${gridsphere.build}"/>
        <delete quiet="true" dir="${gridsphere.dist}"/>
    </target>

    <target name="clean-projects" description="Compile all portlet subprojects">
        <foreach target="clean-project" param="thisEnv">
            <path>
                <dirset dir="${projects.dir}" includes="*"/>
            </path>
        </foreach>
    </target>

    <target name="clean-project">
        <ant dir="${thisEnv}" target="clean"/>
    </target>

    <!-- =================================================================== -->
    <!-- Cleans everything                                                   -->
    <!-- =================================================================== -->
    <target name="clean" description="Delete classes and existing library">
        <delete quiet="true" dir="${gridsphere.build}"/>
        <delete quiet="true" dir="${gridsphere.dist}"/>
    </target>

    <!-- +++++++++++++++ START DATABASE STUFF ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- =================================================================== -->
    <!-- Creates database                                                    -->
    <!-- =================================================================== -->

    <target name="create-database" depends="configure-database, jar">
        <taskdef name="dbtask"
            classname="org.gridlab.gridsphere.core.persistence.hibernate.DBTask"
            classpathref="classpath"/>
        <dbtask
            configdir="${env.CATALINA_HOME}/webapps/gridsphere"
            action="CREATE"/>
    </target>

    <target name="configure-database" depends="setenv">
        <pathconvert targetos="windows" dirsep="/" property="cathome">
            <path location="${env.CATALINA_HOME}"/>
        </pathconvert>
        <replace file="${gridsphere.build}/webapps/gridsphere/WEB-INF/CustomPortal/database/hibernate.properties"
            token="@GRIDSPHERE_DB@"
            value="${cathome}/${gswebapp.dir}/WEB-INF/CustomPortal/database/gridsphere"/>
    </target>

    <target name="configure-test-database" depends="setenv">
        <copy overwrite="true"
            file="webapps/gridsphere/WEB-INF/CustomPortal/database/hibernate.properties"
            todir="${env.CATALINA_HOME}/webapps/gridsphere/WEB-INF/CustomPortal/database"/>
        <pathconvert targetos="windows" dirsep="/" property="cathome">
            <path location="${env.CATALINA_HOME}"/>
        </pathconvert>
        <replace file="${env.CATALINA_HOME}/webapps/gridsphere/WEB-INF/CustomPortal/database/hibernate.properties"
            token="@GRIDSPHERE_DB@"
            value="${cathome}/${gswebapp.dir}/WEB-INF/CustomPortal/database/gridsphere-test"/>
    </target>

    <target name="update-database" depends="configure-database, jar">
        <taskdef name="dbtask"
            classname="org.gridlab.gridsphere.core.persistence.hibernate.DBTask"
            classpathref="classpath"/>
        <dbtask
            configdir="${env.CATALINA_HOME}/webapps/gridsphere"
            action="UPDATE"/>
    </target>


    <!-- +++++++++++++++ START DOCUMENTATION ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <target name="docs" depends="javadocs, docbook" description="Create GridSphere Documentation"/>

    <target name="check-javadocs">
        <condition property="javadocs.exists">
            <available file="${build.javadoc}/index.html"/>
        </condition>
    </target>

    <target name="check-docbook">
        <condition property="docbook.exists">
            <available file="${build.docs}/index.html"/>
        </condition>
    </target>

    <!-- =================================================================== -->
    <!-- Creates all the API documentation                                   -->
    <!-- =================================================================== -->
    <target name="javadocs" depends="setenv, check-javadocs" description="Create GridSphere Javadocs" unless="javadocs.exists">
        <mkdir dir="${build.javadoc}"/>
        <javadoc packagenames="org.gridlab.gridsphere.*, javax.*"
            sourcepath="src"
            classpathref="classpath"
            destdir="${build.javadoc}"
            author="true"
            version="true"
            splitindex="true"
            use="true"
            breakiterator="true"
            maxmemory="256m"
            windowtitle="${gridsphere.name}"
            doctitle="${gridsphere.api}"
            bottom="Copyright &#169; 2002,2003,2004 GridLab Project. All Rights Reserved.">

            <!-- <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>

            <link href="http://jakarta.apache.org/log4j/docs/api/"/>

            <link href="http://www.junit.org/junit/javadoc/3.8/index.htm"/>  -->

            <group title="GridSphere Framework API"
                packages="org.gridlab.gridsphere:org.gridlab.gridsphere.*"/>

            <group title="GridSphere Portlet API"
                packages="org.gridlab.gridsphere.event:org.gridlab.gridsphere.event.*,
                          org.gridlab.gridsphere.portlet:org.gridlab.gridsphere.portlet.*,
                          org.gridlab.gridsphere.portlet.service:org.gridlab.gridsphere.portlet.service.*,
                          org.gridlab.gridsphere.portlet.service.spi:org.gridlab.gridsphere.portlet.service.spi.*"/>

            <group title="JSR 168 Portlet API"
                packages="javax.portlet:javax.portlet.*"/>

            <group title="GridSphere Portlet API Implementation"
                packages="org.gridlab.gridsphere.event.impl:org.gridlab.gridsphere.event.impl.*,
                          org.gridlab.gridsphere.portlet.impl:org.gridlab.gridsphere.portlet.impl.*,
                          org.gridlab.gridsphere.portlet.service.impl:org.gridlab.gridsphere.portlet.service.impl.*,
                          org.gridlab.gridsphere.portlet.service.spi.impl:org.gridlab.gridsphere.portlet.service.spi.impl.*"/>

            <group title="GridSphere JSR 168 Portlet API Implementation"
                packages="org.gridlab.gridsphere.portlet.jsrimpl:org.gridlab.gridsphere.portlet.jsrimpl.*"/>

            <group title="GridSphere Portal Component Library"
                packages="org.gridlab.gridsphere.layout:org.gridlab.gridsphere.layout.*"/>

            <group title="GridSphere UI Tag Library"
                packages="org.gridlab.gridsphere.tags:org.gridlab.gridsphere.tags.*"/>

            <group title="GridSphere Portlet Service Library"
                packages="org.gridlab.gridsphere.services:org.gridlab.gridsphere.services.*"/>

            <group title="GridSphere Portlets"
                packages="org.gridlab.gridsphere.portlets:org.gridlab.gridsphere.portlets.*"/>

        </javadoc>
    </target>

    <!-- =================================================================== -->
    <!-- Builds the GridSphere docbook documentation                         -->
    <!-- =================================================================== -->
    <target name="docbook" depends="setenv, check-docbook" description="Builds the GridSphere docbook documentation." unless="docbook.exists">
        <ant dir="${docbook.dir}" target="docbook" inheritAll="false"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the GridSphere WAR file                                     -->
    <!-- =================================================================== -->
    <target name="war" depends="jar, gridsphere-jar" description="Create GridSphere WAR">

        <antcall target="deploy"/>

        <antcall target="create-database"/>

        <war warfile="${build.webapps}/gridsphere.war" update="true"
            webxml="${build.webapps}/gridsphere/WEB-INF/web.xml">
            <fileset dir="${env.CATALINA_HOME}/webapps/gridsphere">
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Deploys GridSphere and all project portlets to Tomcat               -->
    <!-- =================================================================== -->
    <target name="deploy-all" depends="deploy" description="Compile all portlet subprojects">
        <foreach target="deploy-project" param="thisEnv">
            <path>
                <dirset dir="${projects.dir}" includes="*"/>
            </path>
        </foreach>
    </target>

    <target name="deploy-project">
        <ant dir="${thisEnv}" target="deploy"/>
    </target>

    <!-- =================================================================== -->
    <!-- Deploys GridSphere to Tomcat                                        -->
    <!-- =================================================================== -->
    <target name="deploy" depends="gridsphere-jar, jar" description="Deploys GridSphere to a local server">

        <!-- <delete dir="${build.webapps}/gridsphere"/> -->

        <antcall target="deploy-install"/>

        <antcall target="configure-database"/>

        <!-- always overwrite persistence directory -->
        <!-- <delete dir="${env.CATALINA_HOME}/webapps/gridsphere/WEB-INF/persistence"/> -->

        <copy todir="${env.CATALINA_HOME}/webapps">
            <fileset dir="${build.webapps}"/>
        </copy>

    </target>

    <!-- =================================================================== -->
    <!-- Undeploys GridSphere from Tomcat                                    -->
    <!-- =================================================================== -->
    <target name="undeploy" depends="setenv" description="Undeploys GridSphere from a local server">

        <delete dir="${env.CATALINA_HOME}/webapps/gridsphere"/>
    </target>

    <!-- =================================================================== -->
    <!-- Deploys GridSphere to Tomcat                                        -->
    <!-- =================================================================== -->
    <target name="deploy-install">

        <!-- Copy the gridsphere web app to build directory -->
        <copy todir="${build.webapps}/gridsphere">
            <fileset dir="${gswebapp.dir}"/>
        </copy>

        <copy todir="${gridsphere.build}/docs/EclipseGuide">
            <fileset dir="docs/docbook/EclipseGuide"/>
        </copy>

        <!-- Copy context file -->
        <if>
            <available file="${env.CATALINA_HOME}/conf/Catalina" type="dir" property="tomcat5"/>
            <then>
                <echo message="Detected Tomcat 5"/>
                <copy file="webapps/gridsphere-context.xml" tofile="${env.CATALINA_HOME}/conf/Catalina/localhost/gridsphere.xml"/>
            </then>
            <else>
                <echo message="Detected Tomcat 4"/>
                <copy file="webapps/gridsphere-context.xml" todir="${build.webapps}"/>
            </else>
        </if>

        <copy overwrite="true" todir="${env.CATALINA_HOME}/shared/lib">
            <fileset dir="lib">
                <exclude name="*.LICENSE"/>
            </fileset>
            <fileset dir="${build.lib}">
                <exclude name="gridsphere-test.jar"/>
                <exclude name="gridsphere-ui-tags.jar"/>
                <exclude name="gridsphere-provider.jar"/>
                <exclude name="coreportlets.jar"/>

            </fileset>
        </copy>

        <mkdir dir="${env.CATALINA_HOME}/webapps/gridsphere/docs"/>
        <copy todir="${env.CATALINA_HOME}/webapps/gridsphere/docs">
            <fileset dir="${gridsphere.build}/docs"/>
        </copy>

        <copy overwrite="true" file="${build.lib}/gridsphere-provider.jar" todir="${env.CATALINA_HOME}/shared/lib"/>
        <copy overwrite="true" file="${build.lib}/gridsphere-ui-tags.jar" todir="${env.CATALINA_HOME}/webapps/gridsphere/WEB-INF/lib"/>
        <copy overwrite="true" file="${build.lib}/coreportlets.jar" todir="${env.CATALINA_HOME}/webapps/gridsphere/WEB-INF/lib"/>

    </target>


    <!-- =================================================================== -->
    <!-- Deploys GridSphere to Tomcat                                        -->
    <!-- =================================================================== -->
    <target name="deploy-test" depends="jar, gridsphere-test-jar" description="Deploys GridSphere test to a local server">

        <antcall target="deploy-install"/>

        <antcall target="configure-test-database"/>

        <antcall target="create-database"/>

        <copy todir="${env.CATALINA_HOME}/webapps/gridsphere">
            <fileset dir="${build.webapps}/gridsphere"/>
        </copy>

        <!-- <copy overwrite="true" file="lib/gridsphere-test.jar" todir="${env.CATALINA_HOME}/webapps/gridsphere/WEB-INF/lib"/> -->
        <copy overwrite="true" file="${build.lib}/gridsphere-test.jar" todir="${env.CATALINA_HOME}/webapps/gridsphere/WEB-INF/lib"/>

    </target>

    <!-- +++++++++++++++ END TESTS +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- =================================================================== -->
    <!-- Creates a new portlet project "newproject" in projects directory    -->
    <!-- =================================================================== -->
    <target name="new-project" depends="setenv" description="Creates a new portlet project in projects directory">
        <ant antfile="config/build/build-newproject.xml" target="new-project"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates a new portlet project "newproject" in projects directory    -->
    <!-- =================================================================== -->
    <target name="update-project" depends="setenv" description="Updates a portlet project in projects directory">
        <ant antfile="config/build/build-newproject.xml" target="update-project"/>
    </target>

    <!-- =================================================================== -->
    <!-- Make GridSphere distribution                                        -->
    <!-- =================================================================== -->
    <!-- <target name="dist" depends="clean, jar, war, docs" description="Build GridSphere binary distribution">
        <echo message="Building the binary GridSphere distribution"/>

        <mkdir dir="${gridsphere.dist}"/>

        <copy file="README" todir="${gridsphere.dist}"/>
        <copy file="LICENSE.txt" todir="${gridsphere.dist}"/>
        <copy file="config/build/build.deploy.xml" tofile="${gridsphere.dist}/build.xml"/>
        <copy file="build.properties" tofile="${gridsphere.dist}/build.properties"/>

        <copy todir="${gridsphere.dist}">
            <fileset dir="${gridsphere.build}">
                <exclude name="classes/**"/>
                <exclude name="home/**"/>
                <exclude name="reports/**"/>
            </fileset>
        </copy>

        <copy todir="${gridsphere.dist}/lib">
            <fileset dir="lib"/>
        </copy>

        <copy todir="${gridsphere.dist}/config">
            <fileset dir="config">
                <exclude name="build/build.deploy.xml"/>
            </fileset>
        </copy>
    </target> -->

    <!-- =================================================================== -->
    <!-- Run Tomcat tests                                                    -->
    <!-- =================================================================== -->
    <target name="run-tests" depends="deploy-test">
        <antcall target="run-test"/>
    </target>

    <target name="run-test" if="catalina.exists" description="Run Junit tests in running Tomcat container">

        <!-- Start the servlet engine, wait for it to be started, run the
        unit tests, stop the servlet engine, wait for it to be stopped.
        The servlet engine is stopped if the tests fail for any reason -->

        <runservertests
            testURL="http://127.0.0.1:8080/gridsphere/ServletRedirector?Cactus_Service=RUN_TEST"
            startTarget="start-tomcat"
            stopTarget="stop-tomcat"
            testTarget="tests"/>
    </target>

    <!-- ==================================================================== -->
        <!-- Start Tomcat                                                         -->
        <!-- ==================================================================== -->
        <target name="start-tomcat">
            <java classname="org.apache.catalina.startup.Bootstrap" fork="yes">
                <jvmarg value="-Dcatalina.home=${env.CATALINA_HOME}"/>
                <jvmarg value="-Xdebug"/>
                <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
                <arg value="start"/>
                <classpath>
                    <pathelement path="${java.home}/../lib/tools.jar"/>
                    <fileset dir="${env.CATALINA_HOME}">
                        <include name="bin/bootstrap.jar"/>
                    </fileset>
                </classpath>
            </java>

        </target>

        <!-- =================================================================== -->
        <!-- Stop Tomcat                                                         -->
        <!-- =================================================================== -->
        <target name="stop-tomcat">
            <java classname="org.apache.catalina.startup.Bootstrap" fork="yes">
                <jvmarg value="-Dcatalina.home=${env.CATALINA_HOME}"/>
                <arg value="stop"/>
                <classpath>
                    <fileset dir="${env.CATALINA_HOME}">
                        <include name="bin/bootstrap.jar"/>
                    </fileset>
                </classpath>
            </java>
        </target>

        <!-- =================================================================== -->
        <!-- Run the client JUnit test cases                                     -->
        <!-- =================================================================== -->
        <target name="tests">

            <delete dir="${gridsphere.build}/reports"/>
            <mkdir dir="${gridsphere.build}/reports"/>

            <junit printsummary="yes" haltonfailure="yes" haltonerror="yes" fork="yes">
                <sysproperty key="cactus.contextURL" value="http://localhost:8080/gridsphere"/>
                <classpath>
                    <path refid="classpath"/>
                    <pathelement location="${env.CATALINA_HOME}/webapps/gridsphere"/>
                </classpath>
                <test name="org.gridlab.gridsphere.GridSphereTest" todir="${gridsphere.build}/reports">
                    <formatter type="xml"/>
                </test>
            </junit>

        </target>

    
    <!-- =================================================================== -->
    <!-- Creates HTML reports from the test results                          -->
    <!-- =================================================================== -->
    <target name="test-reports" description="Create test reports from Junit results">
        <echo message="Making GridSphere Junit Test Reports"/>
        <mkdir dir="${gridsphere.build}/reports/html"/>
        <junitreport todir="${gridsphere.build}/reports">
            <fileset dir="${gridsphere.build}/reports">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="noframes" todir="${gridsphere.build}/reports/html" styledir="${env.ANT_HOME}/etc"/>
        </junitreport>
    </target>


    <target name="sourcetarball" depends="clean">
        <tar destfile="${gridsphere.project}-${version}-src.tar" longfile="gnu">
            <tarfileset dir="." prefix="${gridsphere.project}-${version}">
                <exclude name="**/CVS"/>
                <exclude name="*.ipr"/>
                <exclude name="*.iws"/>
                <exclude name="projects"/>
                <exclude name="${gridsphere.project}-${version}-src.tgz"/>
                <exclude name="${gridsphere.project}-${version}-src.zip"/>
            </tarfileset>
        </tar>
        <gzip src="${gridsphere.project}-${version}-src.tar" zipfile="${gridsphere.project}-${version}-src.tgz"/>
        <delete file="${gridsphere.project}-${version}-src.tar"/>

        <zip destfile="${gridsphere.project}-${version}-src.zip" basedir="../gridsphere">
            <exclude name="**/CVS"/>
            <exclude name="*.ipr"/>
            <exclude name="*.iws"/>
            <exclude name="projects"/>
            <exclude name="${gridsphere.project}-${version}-src.zip"/>
            <exclude name="${gridsphere.project}-${version}-src.tgz"/>
        </zip>
    </target>

    <!-- =================================================================== -->
    <!-- Mail the HTML reports of  the test results                          -->
    <!-- =================================================================== -->
    <target name="mail">
        <mail
            mailhost="${mail.junit.mailhost}"
            from="${mail.junit.from}"
            tolist="${mail.junit.tolist}"
            subject="GridSphere JUnit Test Results">
            <message mimetype="text/html" src="${gridsphere.build}/reports/html/junit-noframes.html"/>
            <fileset dir="${gridsphere.build}/reports">
                <include name="TESTS-*.xml"/>
            </fileset>
        </mail>
    </target>

    <target name="deploy-tck" depends="jar">
        <taskdef name="deploytck"
            classname="org.gridlab.gridsphere.tools.DeployGridSphereTCK"
            classpathref="classpath"/>
        <deploytck builddir="${gridsphere.build}" wardir="webapps/tck" server="${env.CATALINA_HOME}"/>
    </target>

    <target name="splash" description="Display the logo">
        <property name="splash.dir" location="."/>
        <splash imageurl="file:webapps/gridsphere/images/gridsphere_logo.png" showduration="0"/>
    </target>

</project>
